"""
The script extracts the adversarial payloads from the output files generated by the WAF-A-MoLE tool.
"""

import json


def process_file(input_file):
    with open(input_file, 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    adv_payloads = [(entry['adv_payload']) for entry in data]
    output_data  = adv_payloads
    output_file  = input_file.replace("output_", "adv_train_test_")
    
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(output_data, f, ensure_ascii=False, indent=4)
    
    print(f"Processed {input_file} and saved to {output_file}")


if __name__ == "__main__":
    input_files = [
        'wafamole_results/results_dataset/adv_examples_retrained_test/output_log_reg_l2_pl4_rs20_100rounds.json',
        'wafamole_results/results_dataset/adv_examples_retrained_test/output_log_reg_pl4_rs20_100rounds.json',
        'wafamole_results/results_dataset/adv_examples_retrained_test/output_rf_pl4_rs20_100rounds.json',
        'wafamole_results/results_dataset/adv_examples_retrained_test/output_svm_linear_l2_pl4_rs20_100rounds.json',
        'wafamole_results/results_dataset/adv_examples_retrained_test/output_svm_linear_pl4_rs20_100rounds.json'
    ]

    for file in input_files:
        process_file(file)