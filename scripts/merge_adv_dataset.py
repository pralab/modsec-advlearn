"""
This script is used to merge the adversarial payloads generated by the WAF-A-MoLE.
This is used to create the datasets for the adversarial training phase.
"""

import json
import os
import pickle

DS_WAFAMOLE = True

if not DS_WAFAMOLE:
    dataset_path = 'data/dataset/malicious_test.json'
    output_dir    = 'data/dataset'
    output_files  = [
        'adv_train_inf_svm_pl4_rs20_100rounds.json',
        'adv_train_log_reg_l1_pl4_rs20_100rounds.json',
        'adv_train_log_reg_l2_pl4_rs20_100rounds.json',
        'adv_train_rf_pl4_rs20_100rounds.json',
        'adv_train_svm_linear_l1_pl4_rs20_100rounds.json',
        'adv_train_svm_linear_l2_pl4_rs20_100rounds.json',
    ]

    with open(dataset_path, 'r') as f:
        dataset = json.load(f)

    for output_file in output_files:
        with open(os.path.join(output_dir, output_file), 'r') as f:
            adv_dataset = json.load(f)

        print(f"Processing {output_file}...")
        print("Length of orginal dataset:", len(dataset))
        print("Length of adv samples:", len(adv_dataset))

        merged_dataset = dataset.copy()
        merged_dataset[0:len(adv_dataset)] = adv_dataset
        
        print("Length of merged dataset:", len(merged_dataset))
        
        output_path = os.path.join('data/dataset', f'{output_file}')
        with open(output_path, 'w') as f:
            json.dump(merged_dataset, f)

        print(f"Saved merged dataset to {output_path}")

    print("All datasets merged and saved successfully.")
else:
    json_files = [
        "wafamole_results/results_dataset_wafamole/adv_examples_advtrain/adv_train_inf_svm_pl4_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_advtrain/adv_train_log_reg_l1_pl4_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_advtrain/adv_train_log_reg_l2_pl4_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_advtrain/adv_train_rf_pl4_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_advtrain/adv_train_svm_linear_l1_pl4_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_advtrain/adv_train_svm_linear_l2_pl4_rs20_100rounds.json",
    ]

    for json_file in json_files:
        with open(json_file, 'r') as file:
            data = json.load(file)
        
        pkl_file = json_file.replace('.json', '.pkl')
        with open(pkl_file, 'wb') as file:
            pickle.dump(data, file)

        print(f"Converted {json_file} to {pkl_file}")